version: '3.7'

services: 
  app:
    hostname: golang_example_development
    container_name: golang_example_development
    depends_on: 
      - postgres
    restart: unless-stopped
    build: 
      context: .
      dockerfile: Dockerfile
      target: local
    environment: 
      DEBUG: "true"
      SERVING_PORT: "*:8080"
      DB_HOST: golang_example_db
    volumes: 
      - .:/app
    working_dir: /app
    env_file: 
      - .env
    ports:
      - 8080:8080
    command: make watch
    tty: true
    networks: 
      - golang_example_development

  postgres:
    image: postgres:11
    container_name: golang_example_db
    volumes:
      - golang_example:/var/libs/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=developer
      - POSTGRES_DB=golang_example_db
      - POSTGRES_PORT=5432
    ports:
      - 5432:5432
    networks:
      - golang_example_development

  postgres_test:
    image: postgres:11
    container_name: golang_example_db_test
    volumes:
      - golang_example:/var/libs/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=developer
      - POSTGRES_DB=golang_example_db_test
      - POSTGRES_PORT=5433
    ports:
      - 5433:5432
    networks:
      - golang_example_development

volumes: 
  golang_example:

networks:
  golang_example_development:
